version: "3"

services:
  edd-zookeeper:
    container_name: edd-zookeeper
    image: debezium/zookeeper:1.5
    hostname: zookeeper
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
#    environment:
#      ZOO_MY_ID: 1
#      ZOO_PORT: 2181
#      ZOO_SERVERS: server.1=zookeeper:2888:3888
    networks:
      - backend-network

  edd-kafka:
    container_name: edd-kafka
    image: debezium/kafka:1.5
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      ZOOKEEPER_CONNECT: "zookeeper:2181"
#      KAFKA_BROKER_ID: 1
#      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

    networks:
      - backend-network
    depends_on:
      - edd-zookeeper
    links:
      - edd-zookeeper:zookeeper

  edd-kafka-manager:
    container_name: edd-kafka-manager
    image: sheepkiller/kafka-manager
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
    networks:
      - backend-network
    depends_on:
      - edd-zookeeper

networks:
  backend-network:
    name: edd-backend-net
    external: true
